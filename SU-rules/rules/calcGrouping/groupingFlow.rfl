<?xml version="1.0" encoding="UTF-8"?>
<ilog.rules.studio.model.ruleflow:RuleFlow xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ilog.rules.studio.model.ruleflow="http://ilog.rules.studio/model/ruleflow.ecore">
  <name>groupingFlow</name>
  <uuid>05dad7b4-16f6-4454-a25c-ab4b4c6f6ba2</uuid>
  <locale>ru_RU</locale>
  <categories>any</categories>
  <rfModel>
<Ruleflow xmlns="http://schemas.ilog.com/Rules/7.0/Ruleflow">
  <Body>
    <TaskList>
      <StartTask Identifier="task_0">
        <Actions Language="irl"><![CDATA[outputGroupingParams = new ResultGrouping();]]></Actions>
      </StartTask>
      <RuleTask ExecutionMode="Fastpath" ExitCriteria="None" Identifier="zoomLevel" Ordering="Default">
        <InitialActions Language="irl"><![CDATA[if (inputGroupingParams.mapEngine == null) {]]>&#13;<![CDATA[
	inputGroupingParams.mapEngine = "";]]>&#13;<![CDATA[
}]]>&#13;<![CDATA[
if (inputGroupingParams.app == null) {]]>&#13;<![CDATA[
	inputGroupingParams.app = "";]]>&#13;<![CDATA[
}]]>&#13;<![CDATA[
if (inputGroupingParams.zoomLevel == null) {]]>&#13;<![CDATA[
	inputGroupingParams.zoomLevel = 0;]]>&#13;<![CDATA[
}]]>&#13;<![CDATA[
]]></InitialActions>
        <RuleList>
          <Rule Uuid="8d6da79d-aec6-4dcf-a363-fc8387aca359"/>
        </RuleList>
      </RuleTask>
      <ActionTask Identifier="groupingTable">
        <Actions Language="irl"><![CDATA[if ( (inputGroupingParams.mapEngine.equals(""))]]>&#13;<![CDATA[
	|| (inputGroupingParams.app.equals(""))]]>&#13;<![CDATA[
	|| (inputGroupingParams.zoomLevel == 0)) {]]>&#13;<![CDATA[
		]]>&#13;<![CDATA[
		outputGroupingParams.groupingLevel = null;]]>&#13;<![CDATA[
		String[] registerNames = GroupingBuilder.getRegisterNames();]]>&#13;<![CDATA[
		loader = RegisterLoader.getInstance(registerNames);]]>&#13;<![CDATA[
		try {]]>&#13;<![CDATA[
  		 	RegisterCache cache = loader.registerCache;]]>&#13;<![CDATA[
   			GroupingBuilder builder= GroupingBuilder.of(cache);]]>&#13;<![CDATA[
			outputGroupingParams.groupingTable = builder.buildResult(inputGroupingParams);]]>&#13;<![CDATA[
		} catch (Exception e) {]]>&#13;<![CDATA[
				e.printStackTrace();]]>&#13;<![CDATA[
				throw e;]]>&#13;<![CDATA[
		} catch (RuntimeException e) {]]>&#13;<![CDATA[
				e.printStackTrace();]]>&#13;<![CDATA[
				throw e;]]>&#13;<![CDATA[
		}]]>&#13;<![CDATA[
} else {]]>&#13;<![CDATA[
	outputGroupingParams.groupingTable = null;]]>&#13;<![CDATA[
}]]></Actions>
      </ActionTask>
      <StopTask Identifier="task_2">
        <Actions/>
      </StopTask>
    </TaskList>
    <NodeList>
      <TaskNode Identifier="node_0" Task="task_0"/>
      <TaskNode Identifier="node_2" Task="task_2"/>
      <TaskNode Identifier="node_7" Task="zoomLevel"/>
      <TaskNode Identifier="node_1" Task="groupingTable"/>
    </NodeList>
    <TransitionList>
      <Transition Identifier="transition_12" Source="node_0" Target="node_7"/>
      <Transition Identifier="transition_0" Source="node_7" Target="node_1"/>
      <Transition Identifier="transition_1" Source="node_1" Target="node_2"/>
    </TransitionList>
  </Body>
  <Resources>
    <ResourceSet Locale="ru_RU">
      <Data Name="node_2#height">23.0</Data>
      <Data Name="node_1#height">40.0</Data>
      <Data Name="node_0#height">21.0</Data>
      <Data Name="node_7#y">-121.0</Data>
      <Data Name="node_1#name">node_3</Data>
      <Data Name="node_2#name">node_2</Data>
      <Data Name="node_7#height">40.0</Data>
      <Data Name="node_7#name">node_7</Data>
      <Data Name="node_1#width">118.72266</Data>
      <Data Name="node_7#width">102.0</Data>
      <Data Name="node_0#name">node_0</Data>
      <Data Name="node_2#width">23.0</Data>
      <Data Name="node_0#width">21.0</Data>
      <Data Name="node_7#x">-538.75</Data>
      <Data Name="node_0#x">-539.0</Data>
      <Data Name="node_0#y">-198.66667</Data>
      <Data Name="node_1#x">-539.0</Data>
      <Data Name="node_2#x">-538.75</Data>
      <Data Name="node_1#y">-38.0</Data>
      <Data Name="node_2#y">38.5</Data>
    </ResourceSet>
  </Resources>
  <Properties>
    <imports><![CDATA[use outputGroupingParams;
use inputGroupingParams;
use outputGroupingTable;
use loader;
import ru.integrotech.su.outputparams.grouping.GroupingBuilder;
import ru.integrotech.airline.register.RegisterLoader;
import ru.integrotech.airline.register.RegisterCache;
import ru.integrotech.su.outputparams.grouping.ResultGrouping;
]]></imports>
  </Properties>
</Ruleflow></rfModel>
</ilog.rules.studio.model.ruleflow:RuleFlow>
